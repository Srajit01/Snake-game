document.addEventListener('DOMContentLoaded', () => {
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');
    
    const GRID_SIZE = 20;
    const CANVAS_SIZE = canvas.width;
    const INITIAL_SNAKE_LENGTH = 3;
    const APPLE_COLOR = '#ff6347';
    const SNAKE_COLOR = '#2e8b57';

    let snake = [];
    let dx = GRID_SIZE;
    let dy = 0;
    let appleX, appleY;
    let score = 0;
    
    function init() {
        snake = [];
        for (let i = INITIAL_SNAKE_LENGTH - 1; i >= 0; i--) {
            snake.push({ x: i * GRID_SIZE, y: 0 });
        }
        appleX = getRandomPosition();
        appleY = getRandomPosition();
        score = 0;
        dx = GRID_SIZE;
        dy = 0;
        main();
    }
    
    function main() {
        if (gameOver()) {
            alert(`Game Over! Score: ${score}`);
            return;
        }
        
        setTimeout(function onTick() {
            clearCanvas();
            drawApple();
            moveSnake();
            drawSnake();
            // Call main again
            main();
        }, 100);
    }
    
    function clearCanvas() {
        ctx.clearRect(0, 0, CANVAS_SIZE, CANVAS_SIZE);
    }
    

    function drawSnake() {
        snake.forEach(drawSnakePart);
    }
 
    function drawSnakePart(snakePart) {
        ctx.fillStyle = SNAKE_COLOR;
        ctx.fillRect(snakePart.x, snakePart.y, GRID_SIZE, GRID_SIZE);
    }
    

    function moveSnake() {
        const head = { x: snake[0].x + dx, y: snake[0].y + dy };
        snake.unshift(head);
        
        if (head.x === appleX && head.y === appleY) {
            score += 10;
            appleX = getRandomPosition();
            appleY = getRandomPosition();
        } else {
            snake.pop();
        }
    }
    
  
    function gameOver() {
        if (snake.length < 1) return true; // Snake length should always be >= 1
        const head = snake[0];
        for (let i = 1; i < snake.length; i++) {
            if (snake[i].x === head.x && snake[i].y === head.y) {
                return true; // Game over if head collides with body
            }
        }
        return (
            head.x < 0 ||
            head.x >= CANVAS_SIZE ||
            head.y < 0 ||
            head.y >= CANVAS_SIZE
        );
    }
    
    function drawApple() {
        ctx.fillStyle = APPLE_COLOR;
        ctx.fillRect(appleX, appleY, GRID_SIZE, GRID_SIZE);
    }
    

    function getRandomPosition() {
        return Math.floor(Math.random() * (CANVAS_SIZE / GRID_SIZE)) * GRID_SIZE;
    }
    
    // Handle key press for snake direction
    document.addEventListener('keydown', changeDirection);
    
    function changeDirection(event) {
        const LEFT_KEY = 37;
        const RIGHT_KEY = 39;
        const UP_KEY = 38;
        const DOWN_KEY = 40;
        
        const keyPressed = event.keyCode;
        const goingUp = dy === -GRID_SIZE;
        const goingDown = dy === GRID_SIZE;
        const goingRight = dx === GRID_SIZE;
        const goingLeft = dx === -GRID_SIZE;
        
        if (keyPressed === LEFT_KEY && !goingRight) {
            dx = -GRID_SIZE;
            dy = 0;
        }
        
        if (keyPressed === UP_KEY && !goingDown) {
            dx = 0;
            dy = -GRID_SIZE;
        }
        
        if (keyPressed === RIGHT_KEY && !goingLeft) {
            dx = GRID_SIZE;
            dy = 0;
        }
        
        if (keyPressed === DOWN_KEY && !goingUp) {
            dx = 0;
            dy = GRID_SIZE;
        }
    }
    
    // Start the game
    init();
});
